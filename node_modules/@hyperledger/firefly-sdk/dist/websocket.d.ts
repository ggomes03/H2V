import { FireFlyWebSocketOptions, FireFlyEventDelivery, FireFlyEventBatchDelivery } from './interfaces';
export interface FireFlyWebSocketCallback {
    (socket: FireFlyWebSocket, data: FireFlyEventDelivery | FireFlyEventBatchDelivery): void | Promise<void>;
}
export declare class FireFlyWebSocket {
    private options;
    private callback;
    private readonly logger;
    private socket?;
    private closed?;
    private pingTimer?;
    private disconnectTimer?;
    private reconnectTimer?;
    private disconnectDetected;
    constructor(options: FireFlyWebSocketOptions, callback: FireFlyWebSocketCallback);
    private connect;
    private clearPingTimers;
    private schedulePing;
    private reconnect;
    send(json: JSON): void;
    ack(event: FireFlyEventDelivery | FireFlyEventBatchDelivery): void;
    close(wait?: boolean): Promise<void>;
}
